Solving random small questions for practice and fun!
1. queue in python

2. stack in python

3. Rotate an array of n elements to the right by k steps.

4. Given two strings s and t, determine if they are isomorphic. Two strings are isomorphic
if the characters in s can be replaced to get t. For example,"egg" and "add" are 
isomorphic, "foo" and "bar" are not

5. Given an array of integers, find two numbers such that they add up to a specific target
number.

6. #Given two words (start and end), and a dictionary, find the length of shortest 
#transformation sequence from start to end, such that only one letter can be changed at a 
#time and each intermediate word must exist in the dictionary. For example, given:
#start = "hit"
#end = "cog"
#dict = ["hot","dot","dog","lot","log"]

7. '''
There are two sorted arrays A and B of size m and n respectively. Find the median of the 
two sorted arrays. The overall run time complexity should be O(log (m+n)).
'''

8. '''
Find the kth largest element in an unsorted array. Note that it is the kth largest element
in the sorted order, not the kth distinct element.
For example, given [3,2,1,5,6,4] and k = 2, return 5.

9.'''
Implement wildcard pattern matching with support for '?' and '*'.
'''

10. '''
Implement regular expression matching with support for '.' and '*'.
'.' Matches any single character.
'*' Matches zero or more of the preceding element.
'''

11. '''
Given a collection of intervals, merge all overlapping intervals.
For example, Given [1,3],[2,6],[8,10],[15,18
'''
12.
'''
Given a collection of candidate numbers (C) and a target number (T), find all unique
combinations in C where the candidate numbers sums to T. Each number in C may only be used
ONCE in the combination.

Note:
1) All numbers (including target) will be positive integers.
2) Elements in a combination must be in non-descending order. 
3) The solution set must not contain duplicate combinations.
'''

       TwoSum as class
------------------------------------
'''
Two Sum III â€“ Data structure design
Design and implement a TwoSum class. It should support the following operations: add and find.
add - Add the number to an internal data structure.
find - Find if there exists any pair of numbers which sum is equal to the value.

For example,
add(1); 
add(3); 
add(5);
find(4) -> true
find(7) -> false
'''
